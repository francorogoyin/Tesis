Estoy desarrollando una aplicaci√≥n de escritorio en Python para Windows que permite gestionar metas personales con unidades personalizadas. 
Quiero que me gu√≠es paso a paso para implementarla usando PyQt5. A continuaci√≥n te detallo los requisitos funcionales y de interfaz:

## üéØ OBJETIVO GENERAL
Una app que me permita crear metas (como leer libros), definir unidades (p√°ginas, minutos, etc.), frecuencia e intervalo, y registrar mi avance. 
La app debe mostrar el progreso y generar reportes visuales.

## üß© FUNCIONES CLAVE
- Crear metas con: nombre, emoji, unidad personalizada, intervalo (diario/semanal/mensual/personalizado), cantidad por intervalo, fecha de inicio, 
fecha final o cantidad total.
- Registro de progreso directamente desde la pantalla principal (bot√≥n `+` con input).
- C√°lculo autom√°tico del avance, con barra de progreso.
- Vista detallada de cada meta con posibilidad de editar campos clave y ver vista previa del nuevo plan.
- Auto-finalizaci√≥n de metas al llegar al 100%.
- Validaciones de datos (fechas, n√∫meros, campos vac√≠os).
- Copia de seguridad autom√°tica al editar campos sensibles.
- Opci√≥n para reconvertir registros al cambiar unidades.
- Historial por fechas con opci√≥n de eliminar registros y exportar.
- Panel superior con lo que ‚Äúdeber√≠a hacerse hoy‚Äù en cada meta.
- Posibilidad de pausar metas sin perder datos.
- M√≥dulo de reportes visuales con filtros por fecha, metas y frecuencia de agregaci√≥n.
- Perfil de usuario con configuraci√≥n b√°sica: idioma, tema, ruta de backup.

## üé® INTERFAZ
- Uso de PyQt5 con estilo visual limpio y espacioso.
- Metas mostradas como bloques con emoji, nombre, barra de progreso y bot√≥n `+`.
- Navegaci√≥n por ventanas: Dashboard, Crear Meta, Detalle, Reportes, Historial.
- Confirmaciones visuales para acciones sensibles.
- Input num√©rico con confirmaci√≥n o deshacer para registros.

## üóÇ ESTRUCTURA T√âCNICA
- GUI: PyQt5
- Almacenamiento: Archivos JSON por meta
- Gr√°ficos: matplotlib embebido
- Backups: JSON en carpeta /backups/

Comencemos paso a paso. Primero, quiero que me ayudes a:
1. Definir la estructura b√°sica de carpetas y archivos.
2. Crear la interfaz base de la ventana principal con PyQt5 (solo el layout, sin l√≥gica).
3. Ir m√≥dulo por m√≥dulo implementando funciones.

Actu√° como un desarrollador experto en Python y PyQt5. Hacelo claro, escalable y mantenible.
